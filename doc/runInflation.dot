digraph {
    node [shape = box; style = "rounded, filled"; fillcolor = "#F5F5F5"; fontname = "Arial"; fontsize = 12;];
    edge [fontname = "Arial"; fontsize = 10;];
    
    subgraph StartEnd {
        start [label = "Start";shape = "ellipse";style = "filled";fillcolor = "#90EE90";];
        
        start -> availableMintCheck;
        
        end [label = "end";shape = "ellipse";style = "filled";fillcolor = "#90EE90";];
    }
    
    subgraph RunInflation {
        cluster = true;
        label = "Run Inflation";
        
        adminCheck [label = "Admin?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        adminCheck -> availableMintCheck [label = "Yes"; fontsize = 10;];
        adminCheck -> revertNotAdmin [label = "No"; fontsize = 10;];
        revertNotAdmin [label = "NotAdmin";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        availableMintCheck [label = "There is\navailable mint?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        availableMintCheck -> revertStillAvailableMints [label = "Yes"; fontsize = 10;];
        availableMintCheck -> maxSupplyCheck [label = "No"; fontsize = 10;];
        revertStillAvailableMints [label = "StillAvailableMints";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        
        maxSupplyCheck [label = "Max supply is\n capped to max?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        maxSupplyCheck -> spanCheck [label = "Yes"; fontsize = 10;];
        maxSupplyCheck -> revertMaxSupplyIsCapped [label = "No"; fontsize = 10;];
        revertMaxSupplyIsCapped [label = "MaxSupplyIsCapped";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        spanCheck [label = "Span has\nbeen reached";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        spanCheck -> enableCheck [label = "Yes"; fontsize = 10;];
        spanCheck -> revertSpanNotReached [label = "No"; fontsize = 10;];
        revertSpanNotReached [label = "SpanNotReached";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        enableCheck [label = "Inflation \nenable?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        enableCheck -> executeInflationComponent [label = "Yes"; fontsize = 10;];
        enableCheck -> lastTuningOn [label = "No"; fontsize = 10;];
        
        executeInflationComponent -> lastTuningOn;
        executeInflationComponent [label = "Execute Inflation";shape = "component";style = "filled";fillcolor = "violet";];
        
        
        subgraph ExecuteInflation {
            cluster = true;
            label = "Execute Inflation";
            
            add_supply [label = "Calculate \nadd supply";style = "filled";fillcolor = "greenyellow";];
            add_supply -> add_supplyCheck;
            add_supplyCheck [label = "max_supply + add_supply \n>= MAX_CAP ?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
            add_supplyCheck -> updateAvailableMintA [label = "Yes"; fontsize = 10;];
			updateAvailableMintA [label = "available mint << \nMAX_CAP - max_supply";style = "filled";fillcolor = "greenyellow";];
            updateAvailableMintA -> updateMaxSupplyA;
            updateMaxSupplyA [label = "max_supply << MAX_CAP";style = "filled";fillcolor = "greenyellow";];
            
			add_supplyCheck -> updateAvailableMintB [label = "No"; fontsize = 10;];
            updateAvailableMintB [label = "available mint << \nMAX_CAP - max_supply";style = "filled";fillcolor = "greenyellow";];
            
			updateAvailableMintB -> updateMaxSupplyB;
			updateMaxSupplyB [label = "max_supply << MAX_CAP";style = "filled";fillcolor = "greenyellow";];

        }
        
        
        // calculateAddSupply [label = "Calculate Add Supply";style = "filled";fillcolor = "#FFDAB9";];
        // calculateAddSupply -> maxSupplyCheck2 [label = "max_supply + add_supply >= MAX_CAP"; fontsize = 10;];
        // calculateAddSupply -> setMaxSupplyAndAvailableMint [label = "max_supply + add_supply < MAX_CAP"; fontsize = 10;];
        // setMaxSupplyAndAvailableMint [label = "Set max_supply and available_mint";style = "filled";fillcolor = "#FFDAB9";];
        // setMaxSupplyAndAvailableMint -> lastTuningOn [label = "Continue"; fontsize = 10;];
        // maxSupplyCheck2 [label = "Max Supply Check 2";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        // maxSupplyCheck2 -> setMaxSupplyAndAvailableMint [label = "Yes"; fontsize = 10;];
        // maxSupplyCheck2 -> revertMaxSupplyIsCapped2 [label = "No"; fontsize = 10;];
        
        
        lastTuningOn [label = "Update \nlast tuning";style = "filled";fillcolor = "greenyellow";];
        lastTuningOn -> emitInflationRun [label = "Continue"; fontsize = 10;];
        emitInflationRun [label = "Emit InflationRun";shape = "box";style = "rounded,filled";fillcolor = "turquoise";];
        // emitInflationRun -> newSpanCheck [label = "Continue"; fontsize = 10;];
    }
    
    subgraph TuneInflationComponent {}
    
    subgraph TuneInflation {
        cluster = true;
        label = "Tune Inflation";
        
        newSpanCheck [label = "New Span is \nconstrained {max,min}?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        newSpanCheck -> newRateCheck [label = "Yes"; fontsize = 10;];
        newSpanCheck -> revertSpanOfflimited [label = "No"; fontsize = 10;];
        revertSpanOfflimited [label = "SpanOfflimited";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        newRateCheck [label = "New Rate is \nconstrained {max}?";shape = "diamond";style = "filled";fillcolor = "#FFE4B5";];
        newRateCheck -> updateInflationRate [label = "Yes"; fontsize = 10;];
        newRateCheck -> revertRateOfflimited [label = "No"; fontsize = 10;];
        revertRateOfflimited [label = "RateOfflimited";shape = "box";style = "rounded,filled";fillcolor = "red";];
        
        updateInflationRate [label = "Update\ninflation rate";style = "filled";fillcolor = "greenyellow";];
        updateInflationRate -> updateSpan;
        updateSpan [label = "Update\nspan";style = "filled";fillcolor = "greenyellow";];
        updateSpan -> emitInflationTuned;
        
        
        emitInflationTuned [label = "Emit InflationTuned";shape = "box";style = "rounded,filled";fillcolor = "turquoise";];
        
        end2 [label = "end";shape = "ellipse";style = "filled";fillcolor = "#90EE90";];
    }
    
    tuneInflationComponent [label = "Tune Inflation";shape = "component";style = "filled";fillcolor = "violet";];
    
    revertStillAvailableMints -> end;
    revertMaxSupplyIsCapped -> end;
    revertSpanNotReached -> end;
    revertSpanOfflimited -> end2;
    revertRateOfflimited -> end2;
    revertNotAdmin -> end;
    emitInflationRun -> tuneInflationComponent;
    tuneInflationComponent -> end;
}